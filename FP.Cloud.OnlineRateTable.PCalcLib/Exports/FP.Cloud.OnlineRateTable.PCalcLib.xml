<?xml version="1.0"?>
<doc>
    <assembly>
        "FP.Cloud.OnlineRateTable.PCalcLib"
    </assembly>
    <members>
        <member name="M:FP.Cloud.OnlineRateTable.PCalcLib.PCalcProxyContext.#ctor(FP.Cloud.OnlineRateTable.PCalcLib.IPCalcManager,FP.Cloud.OnlineRateTable.PCalcLib.IEnvironmentProcessor,FP.Cloud.OnlineRateTable.PCalcLib.IActionResultProcessor,FP.Cloud.OnlineRateTable.PCalcLib.ICalculationResultProcessor,FP.Cloud.OnlineRateTable.PCalcLib.IProductDescriptionMapper,System.String,System.String,System.String[])">
            <summary>
Creates a instance of type PCalcProxyContext
</summary>
        </member>
        <member name="M:FP.Cloud.OnlineRateTable.PCalcLib.PCalcProxyContext.#ctor(System.String,System.String,System.String[])">
            <summary>
Creates a instance of type PCalcProxyContext
</summary>
        </member>
        <member name="M:FP.Cloud.OnlineRateTable.PCalcLib.IPCalcProxy.Back(FP.Cloud.OnlineRateTable.Common.ProductCalculation.EnvironmentInfo,FP.Cloud.OnlineRateTable.Common.ProductCalculation.ProductDescriptionInfo)">
            <summary>
Calculate the previous product
</summary>
        </member>
        <member name="M:FP.Cloud.OnlineRateTable.PCalcLib.IPCalcProxy.Calculate(FP.Cloud.OnlineRateTable.Common.ProductCalculation.EnvironmentInfo,FP.Cloud.OnlineRateTable.Common.ProductCalculation.ProductDescriptionInfo)">
            <summary>
Recalculate the product with changed properties e.g new weight.
</summary>
        </member>
        <member name="M:FP.Cloud.OnlineRateTable.PCalcLib.IPCalcProxy.Calculate(FP.Cloud.OnlineRateTable.Common.ProductCalculation.EnvironmentInfo,FP.Cloud.OnlineRateTable.Common.ProductCalculation.ProductDescriptionInfo,FP.Cloud.OnlineRateTable.Common.ProductCalculation.ActionResultInfo)">
            <summary>
Calculate the product with the input from the previous calculation step
</summary>
        </member>
        <member name="M:FP.Cloud.OnlineRateTable.PCalcLib.IPCalcProxy.Start(FP.Cloud.OnlineRateTable.Common.ProductCalculation.EnvironmentInfo,FP.Cloud.OnlineRateTable.Common.ProductCalculation.WeightInfo)">
            <summary>
Initialize the product calculation and prepare the first calculation step
</summary>
        </member>
        <member name="D:boost.typeindex.type_info">
Depending on a compiler flags, optimal implementation of type_info will be used 
as a default boost::typeindex::type_info.

Could be a std::type_info, boost::typeindex::detail::ctti_data or 
some user defined class.

type_info \b is \b not copyable or default constructible. It is \b not assignable too!
</member>
        <member name="T:__type_info_node">
\file boost/type_index.hpp
\brief Includes minimal set of headers required to use the Boost.TypeIndex library.

By inclusion of this file most optimal type index classes will be included and used 
as a boost::typeindex::type_index and boost::typeindex::type_info.
</member>
    </members>
</doc>